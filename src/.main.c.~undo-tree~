(undo-tree-save-format-version . 1)
"eaf2e8de734ad0f9aaebd49864ecb7d7752e906e"
[nil nil nil nil (26775 40021 879920 679000) 0 nil]
([nil nil ((#("<" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -911) (undo-tree-id12 . -1) (#("=" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -912) (undo-tree-id13 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -913) (undo-tree-id14 . -1) 914 (t 26746 50083 0 0)) nil (26775 40068 494466 75000) 0 nil] [nil nil ((1 . 2) (t 26746 50083 0 0)) ((#("x" 0 1 (fontified t)) . 1) (undo-tree-id0 . -1)) (26775 40021 879457 443000) 0 nil])
([nil nil ((911 . 912)) nil (26775 40068 494464 200000) 0 nil])
nil
([nil nil ((912 . 913)) nil (26775 40068 494463 681000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -911) (undo-tree-id10 . -1) (#("+" 0 1 (face font-lock-comment-face fontified t)) . -912) (undo-tree-id11 . -1) 913) nil (26775 40068 494462 819000) 0 nil])
([nil nil ((911 . 914)) nil (26775 40068 494461 471000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -912) (undo-tree-id8 . -1) (#("=" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -913) (undo-tree-id9 . -1) 914) nil (26775 40068 494460 583000) 0 nil])
([nil nil ((912 . 914)) nil (26775 40068 494458 923000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -911) (undo-tree-id5 . -1) (#("-" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -912) (undo-tree-id6 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -913) (undo-tree-id7 . -1) 914) nil (26775 40068 494457 607000) 0 nil])
([nil nil ((911 . 913)) nil (26775 40068 494454 495000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-comment-face fontified t)) . -911) (undo-tree-id3 . -1) (#("=" 0 1 (face font-lock-comment-face fontified t)) . -912) (undo-tree-id4 . -1) 913) nil (26775 40068 494454 13000) 0 nil])
([nil nil ((911 . 912)) nil (26775 40068 494450 995000) 0 nil])
([nil nil ((912 . 913)) nil (26775 40068 494450 569000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -911) (undo-tree-id1 . -1) (#("_" 0 1 (face font-lock-comment-face fontified t)) . -912) (undo-tree-id2 . -1) 913) nil (26775 40068 494448 983000) 0 nil])
([nil nil ((911 . 913)) nil (26775 40068 494436 21000) 0 nil])
([nil nil ((1345 . 1351) (t 26775 40068 493661 298000)) nil (26775 40112 211084 788000) 0 nil])
([nil nil ((1350 . 1351)) nil (26775 40112 211080 667000) 0 nil])
([nil nil ((#("   . TODO: select submatrices; resize matrices and add/remove rows and/or columns" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 9 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 9 81 (c-in-sws t face font-lock-comment-face fontified t)) . 1419) (t 26775 40112 210863 619000)) nil (26775 43014 775181 559000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1419)) nil (26775 43014 775179 589000) 0 nil])
([nil nil ((nil rear-nonsticky nil 875 . 876) (nil fontified nil 875 . 876) (nil fontified nil 803 . 875) (nil fontified nil 799 . 803) (nil fontified nil 794 . 799) (794 . 876)) nil (26775 43014 775174 844000) 0 nil])
([nil nil ((#("   . BUG: fix buffer overruns in load_program" 0 45 (c-in-sws t face font-lock-comment-face fontified t)) . 1201) (t 26775 43014 774686 338000)) nil (26775 43064 646604 723000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1201)) nil (26775 43064 646604 224000) 0 nil])
([nil nil ((#("   . FIXME: clean up and consolidate binary_fun.c; cleanup the dispatch table" 0 5 (face font-lock-comment-face fontified t) 5 10 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 77 (face font-lock-comment-face fontified t)) . 1201)) nil (26775 43064 646603 722000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1201)) nil (26775 43064 646603 336000) 0 nil])
([nil nil ((nil rear-nonsticky nil 917 . 918) (nil fontified nil 917 . 918) (nil fontified nil 850 . 917) (nil fontified nil 845 . 850) (nil fontified nil 840 . 845) (nil fontified nil 839 . 840) (nil fontified nil 794 . 839) (794 . 918)) nil (26775 43064 646602 870000) 0 nil])
([nil nil ((#("   . FIXME: clean up the interpreter to have only one dispatch table in the VM" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 6 7 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 7 8 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 8 9 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 9 10 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 11 (c-in-sws t face font-lock-comment-face fontified t) 11 12 (c-in-sws t face font-lock-comment-face fontified t) 12 78 (c-in-sws t face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646602 138000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646601 890000) 0 nil])
([nil nil ((#("   . FIXME: ignore NANs in a smart way in reduce_ops;" 0 5 (face font-lock-comment-face fontified t) 5 6 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 6 9 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 9 10 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 53 (face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646601 592000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646601 322000) 0 nil])
([nil nil ((#("   . NOTE: Write documentation" 0 5 (face font-lock-comment-face fontified t) 5 9 (face ((:foreground "#00FF00") hl-todo font-lock-comment-face) fontified t) 9 30 (face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646600 959000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646600 674000) 0 nil])
([nil nil ((#("   . FIXME: check if name is already defined and reject the definition if it is" 0 5 (face font-lock-comment-face fontified t) 5 10 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 79 (face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646600 336000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1422)) nil (26775 43064 646599 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1161 . 1162) (nil fontified nil 1161 . 1162) (nil fontified nil 1092 . 1161) (nil fontified nil 1087 . 1092) (nil fontified nil 1082 . 1087) (nil fontified nil 1081 . 1082) (nil fontified nil 1060 . 1081) (nil fontified nil 1056 . 1060) (nil fontified nil 1051 . 1056) (nil fontified nil 1050 . 1051) (nil fontified nil 1007 . 1050) (nil fontified nil 1006 . 1007) (nil fontified nil 1003 . 1006) (nil fontified nil 1002 . 1003) (nil fontified nil 997 . 1002) (nil fontified nil 996 . 997) (nil fontified nil 930 . 996) (nil fontified nil 929 . 930) (nil fontified nil 928 . 929) (nil fontified nil 927 . 928) (nil fontified nil 926 . 927) (nil fontified nil 925 . 926) (nil fontified nil 924 . 925) (nil fontified nil 923 . 924) (nil fontified nil 918 . 923) (918 . 1162)) nil (26775 43064 646599 229000) 0 nil])
([nil nil ((#("   . NOTE: Write documentation" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 9 (c-in-sws t face ((:foreground "#00FF00") hl-todo font-lock-comment-face) fontified t) 9 30 (c-in-sws t face font-lock-comment-face fontified t)) . 1051)) nil (26775 43064 646597 254000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1051)) nil (26775 43064 646596 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 824 . 825) (nil fontified nil 824 . 825) (nil fontified nil 803 . 824) (nil fontified nil 799 . 803) (nil fontified nil 794 . 799) (794 . 825)) nil (26775 43064 646596 375000) 0 nil])
([nil nil ((#("   . TODO: sto ind, rcl ind." 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 9 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 9 28 (c-in-sws t face font-lock-comment-face fontified t)) . 1666) (undo-tree-id16 . -28)) nil (26775 43064 646595 361000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1666) (undo-tree-id15 . -1)) nil (26775 43064 646592 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1597 . 1598) (nil fontified nil 1597 . 1598) (nil fontified nil 1578 . 1597) (nil fontified nil 1574 . 1578) (nil fontified nil 1569 . 1574) (1569 . 1598)) nil (26775 43064 646576 797000) 0 nil])
([nil nil ((#("June " 0 5 (face font-lock-comment-face fontified t c-in-sws t)) . -775) (undo-tree-id17 . -5) 780 (t 26775 43064 646926 869000)) nil (26775 43078 734943 856000) 0 nil])
([nil nil ((775 . 783)) nil (26775 43078 734930 962000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . 783) (#("1" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 783)) nil (26775 43078 734925 843000) 0 nil])
([nil nil ((782 . 783) (t 26775 43078 734994 813000)) nil (26775 43093 223097 508000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -790) (undo-tree-id25 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t)) . -791) (undo-tree-id26 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t)) . -792) (undo-tree-id27 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t)) . -793) (undo-tree-id28 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t)) . -794) (undo-tree-id29 . -1) 795 (t 26775 43084 604023 117000)) nil (26775 43100 59108 363000) 0 nil] [nil nil ((#("2025 ****" 0 9 (c-in-sws t face font-lock-comment-face fontified t)) . -786) (undo-tree-id18 . -9) 795 (t 26775 43084 604023 117000)) ((786 . 795)) (26775 43093 222662 608000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -753) (undo-tree-id20 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -754) (undo-tree-id21 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -755) (undo-tree-id22 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t)) . -756) (undo-tree-id23 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -757) (undo-tree-id24 . -1) 758) nil (26775 43100 59078 751000) 0 nil])
nil
([nil nil ((753 . 754)) nil (26775 43100 59074 351000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -753) (undo-tree-id19 . -1) 754) nil (26775 43103 736536 559000) 0 nil])
([nil nil ((753 . 755) (t 26775 43100 59097 654000)) nil (26775 43110 746773 67000) 0 nil] [nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 753) (#("l" 0 1 (face font-lock-comment-face fontified t)) . 753) (#("l" 0 1 (face font-lock-comment-face fontified t)) . 753) (#("i" 0 1 (face font-lock-comment-face fontified t)) . 753) (#("t" 0 1 (face font-lock-comment-face fontified t)) . 753) (#("S" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 753) (t 26775 43100 59097 654000)) ((753 . 754) (753 . 754) (753 . 754) (753 . 754) (753 . 754) (753 . 754)) (26775 43103 735021 591000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -753) (undo-tree-id30 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -754) (undo-tree-id31 . -1) 755) nil (26775 43110 746769 924000) 0 nil])
nil
([nil nil ((#("   . FIXME: check if name is already defined and reject the definition if it is" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 10 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 79 (c-in-sws t face font-lock-comment-face fontified t)) . 1074) (t 26775 43110 747149 200000)) nil (26775 43149 374973 527000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . 1074)) nil (26775 43149 374972 973000) 0 nil])
([nil nil ((nil fontified nil 1153 . 1154) (nil fontified nil 1084 . 1153) (nil fontified nil 1079 . 1084) (nil fontified nil 1074 . 1079) (1074 . 1154)) nil (26775 43149 374972 352000) 0 nil])
([nil nil ((nil fontified nil 1233 . 1234) (nil fontified nil 1164 . 1233) (nil fontified nil 1159 . 1164) (nil fontified nil 1154 . 1159) (1154 . 1234)) nil (26775 43149 374971 380000) 0 nil])
([nil nil ((#("check if name is already defined and reject the definition if it is" 0 67 (face font-lock-comment-face fontified t)) . 1166) (undo-tree-id33 . -8) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -67)) nil (26775 43149 375289 232000) 0 nil])
([nil nil ((1166 . 1187)) nil (26775 43155 499616 368000) 0 nil] [nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . 1166) (undo-tree-id32 . -1)) ((1166 . 1167)) (26775 43149 374963 944000) 0 nil])
([nil nil ((1187 . 1194)) nil (26775 43155 499612 731000) 0 nil])
nil
([nil nil ((#("   . NOTE: Write documentation" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 9 (c-in-sws t face ((:foreground "#00FF00") hl-todo font-lock-comment-face) fontified t) 9 30 (c-in-sws t face font-lock-comment-face fontified t)) . 786) (t 26775 43155 499365 29000)) nil (26775 43286 257419 300000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . 786)) nil (26775 43286 257418 737000) 0 nil])
([nil nil ((nil fontified nil 1194 . 1195) (nil fontified nil 1173 . 1194) (nil fontified nil 1169 . 1173) (nil fontified nil 1164 . 1169) (1164 . 1195)) nil (26775 43286 257418 152000) 0 nil])
([nil nil ((#("NOTE" 0 4 (c-in-sws t face ((:foreground "#00FF00") hl-todo font-lock-comment-face) fontified t)) . -1169) (undo-tree-id38 . -4) 1173) nil (26775 43286 257417 222000) 0 nil])
([nil nil ((1169 . 1173)) nil (26775 43286 942784 102000) 0 nil])
([nil nil ((786 . 787)) nil (26775 43319 433431 919000) 0 nil] [nil nil ((786 . 787)) ((#("\\" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 786) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) (26775 43286 258062 463000) 0 nil])
([nil nil ((#("   . BUG: fix buffer overruns in load_program" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t) 4 45 (c-in-sws t face font-lock-comment-face fontified t)) . 787)) nil (26775 43319 433431 349000) 0 nil])
([nil nil ((#("   " 0 1 (c-is-sws t face font-lock-comment-face fontified nil) 1 3 (face font-lock-comment-face fontified nil)) . 788) (787 . 788)) ((#("
" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 787) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (788 . 791)) (26775 43286 257402 501000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 787)) nil (26775 43319 433430 574000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 832 . 833) (nil fontified nil 832 . 833) (nil fontified nil 791 . 832) (nil fontified nil 790 . 791) (nil fontified nil 788 . 790) (nil fontified nil 787 . 788) (787 . 833)) nil (26775 43319 433429 858000) 0 nil])
([nil nil ((nil rear-nonsticky nil 831 . 832) (nil fontified nil 831 . 832) (nil fontified nil 790 . 831) (nil fontified nil 789 . 790) (nil fontified nil 787 . 789) (nil fontified nil 786 . 787) (786 . 832)) nil (26775 43319 433428 937000) 0 nil])
([nil nil ((#("BUG" 0 3 (c-in-sws t face font-lock-comment-face fontified t)) . 791)) nil (26775 43319 433427 703000) 0 nil])
([nil nil ((791 . 797)) nil (26775 43319 433427 159000) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-comment-face fontified t)) . -795) (undo-tree-id52 . -1) (#("E" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -796) (undo-tree-id53 . -1) 797) nil (26775 43319 433426 555000) 0 nil])
([nil nil ((795 . 796)) nil (26775 43319 433425 107000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -833) (undo-tree-id51 . -1) 834) nil (26775 43319 433424 690000) 0 nil])
([nil nil ((#("overruns in load_program" 0 24 (c-in-sws t face font-lock-comment-face fontified t)) . -809) (undo-tree-id50 . -24) 833) nil (26775 43319 433423 753000) 0 nil])
([nil nil ((#("buffer " 0 7 (face font-lock-comment-face c-in-sws t fontified t)) . -802) (undo-tree-id49 . -7) 809) nil (26775 43319 433422 772000) 0 nil])
([nil nil ((#("fix " 0 4 (face font-lock-comment-face c-in-sws t fontified t)) . -798) (undo-tree-id48 . -4) 802) nil (26775 43319 433421 724000) 0 nil])
([nil nil ((798 . 800)) nil (26775 43319 433420 2000) 0 nil])
([nil nil ((800 . 821)) nil (26775 43319 433419 665000) 0 nil])
([nil nil ((821 . 829)) nil (26775 43319 433419 359000) 0 nil])
([nil nil ((829 . 830)) nil (26775 43319 433418 941000) 0 nil])
([nil nil ((830 . 834)) nil (26775 43319 433418 194000) 0 nil])
([nil nil ((#("+" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -833) (undo-tree-id47 . -1) 834) nil (26775 43319 433416 470000) 0 nil])
([nil nil ((833 . 836)) nil (26775 43319 433400 717000) 0 nil])
([nil nil ((#("#include \"run_machine.h\"" 0 1 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 24 (c-in-sws t face font-lock-string-face fontified t)) . 2592) (undo-tree-id8 . -24) (undo-tree-id9 . -24) (t 26788 30099 481568 110000)) nil (26788 54171 757914 703000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t c-is-sws t fontified t)) . 2592) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (26788 54171 757912 69000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2616 . 2617) (nil fontified nil 2616 . 2617) (nil fontified nil 2601 . 2616) (nil fontified nil 2600 . 2601) (nil fontified nil 2593 . 2600) (nil fontified nil 2592 . 2593) (2592 . 2617)) nil (26788 54171 757910 133000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2641 . 2642) (nil fontified nil 2641 . 2642) (nil fontified nil 2626 . 2641) (nil fontified nil 2625 . 2626) (nil fontified nil 2618 . 2625) (nil fontified nil 2617 . 2618) (2617 . 2642)) nil (26788 54171 757909 18000) 0 nil])
([nil nil ((#("machine" 0 7 (face font-lock-string-face fontified t c-in-sws t)) . -2631) (undo-tree-id4 . -7) (undo-tree-id5 . -7) 2638) nil (26788 54171 757907 971000) 0 nil])
([nil nil ((#("run_" 0 3 (face font-lock-string-face fontified t c-in-sws t) 3 4 (face font-lock-string-face c-in-sws t fontified t)) . -2627) (undo-tree-id0 . -4) (undo-tree-id1 . -3) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 2631) nil (26788 54171 757905 678000) 0 nil])
([nil nil ((2627 . 2638)) nil (26788 54171 757885 625000) 0 nil])
([nil nil ((3270 . 3272) (#("  " 0 2 (fontified nil)) . 3269) (undo-tree-id13 . -2) (3269 . 3272) (#("  " 0 2 (fontified nil)) . 3268) (undo-tree-id14 . -2) (3268 . 3271) (#("  " 0 2 (fontified nil)) . 3267) (undo-tree-id15 . -2) (3269 . 3270) (3266 . 3267) (t 26788 54171 757634 449000)) nil (26788 54234 202951 940000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3752 . 3753) (nil fontified nil 3267 . 3753) (3267 . 3753)) nil (26788 54234 202949 544000) 0 nil])
([nil nil ((#("    // ..." 0 4 (c-is-sws t c-in-sws t fontified t) 4 5 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5 7 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 7 9 (c-in-sws t face font-lock-comment-face fontified t) 9 10 (c-in-sws t face font-lock-comment-face rear-nonsticky t fontified t)) . 3743) (undo-tree-id12 . -10)) nil (26788 54234 202948 804000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3743) (undo-tree-id11 . -1)) nil (26788 54234 202947 408000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3743) (undo-tree-id10 . -1)) nil (26788 54234 202943 934000) 0 nil])
([nil nil ((3744 . 3748) (3744 . 3746) (t 26788 54234 203151 389000)) nil (26788 54441 645072 334000) 0 nil])
([nil nil ((#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -3746) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -3747) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t)) . -3748) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . -3749) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3750) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . -3751) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 3752 (t 26788 54441 644190 592000)) nil (26788 54480 17058 486000) 0 nil])
([nil nil ((786 . 787) (t 26788 54480 17122 755000)) nil (26789 14981 213226 884000) 0 nil])
([nil nil ((786 . 789)) nil (26789 14981 213226 64000) 0 nil])
([nil nil ((789 . 795)) nil (26789 14981 213225 478000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -794) (undo-tree-id100 . -1) 795) nil (26789 14981 213224 797000) 0 nil])
([nil nil ((794 . 795)) nil (26789 14981 213223 854000) 0 nil])
([nil nil ((795 . 799)) nil (26789 14981 213223 426000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -796) (undo-tree-id97 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -797) (undo-tree-id98 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -798) (undo-tree-id99 . -1) 799) nil (26789 14981 213222 484000) 0 nil])
([nil nil ((796 . 797)) nil (26789 14981 213220 874000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-comment-face fontified t)) . -796) (undo-tree-id96 . -1) 797) nil (26789 14981 213220 169000) 0 nil])
([nil nil ((796 . 797)) nil (26789 14981 213219 307000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -795) (undo-tree-id94 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -796) (undo-tree-id95 . -1) 797) nil (26789 14981 213218 656000) 0 nil])
([nil nil ((795 . 816)) nil (26789 14981 213217 468000) 0 nil])
([nil nil ((816 . 818)) nil (26789 14981 213217 20000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -817) (undo-tree-id93 . -1) 818) nil (26789 14981 213216 253000) 0 nil])
([nil nil ((817 . 838)) nil (26789 14981 213215 20000) 0 nil])
([nil nil ((838 . 843)) nil (26789 14981 213214 255000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-comment-face fontified t)) . -838) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 839) nil (26789 14981 213212 881000) 0 nil])
([nil nil ((842 . 843)) nil (26789 14981 213199 305000) 0 nil])
([nil nil ((#("0" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 777) (t 26789 14981 213997 199000)) nil (26789 14984 860852 863000) 0 nil])
([nil nil ((777 . 778)) nil (26789 14984 860849 175000) 0 nil])
([nil nil ((843 . 845) (t 26789 14984 861096 29000)) nil (26789 15089 401135 302000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -844) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 845) nil (26789 15089 401134 175000) 0 nil])
([nil nil ((844 . 864)) nil (26789 15089 401132 286000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -863) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 864) nil (26789 15089 401130 911000) 0 nil])
([nil nil ((863 . 868)) nil (26789 15089 401118 492000) 0 nil])
([nil nil ((919 . 924) (t 26789 15089 402039 18000)) nil (26789 15099 272328 974000) 0 nil])
([nil nil ((#("   . FIXME: read configuration from .config/mm_rpn etc." 0 5 (face font-lock-comment-face c-in-sws t fontified t) 5 10 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) c-in-sws t fontified t) 10 50 (face font-lock-comment-face c-in-sws t fontified t) 50 51 (c-in-sws t face font-lock-comment-face fontified t) 51 52 (c-in-sws t face font-lock-comment-face fontified t) 52 53 (c-in-sws t face font-lock-comment-face fontified t) 53 54 (c-in-sws t face font-lock-comment-face fontified t) 54 55 (c-in-sws t face font-lock-comment-face fontified t)) . 869) (t 26789 15099 272316 882000)) nil (26789 15277 38763 175000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 869)) nil (26789 15277 38761 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 841 . 842) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 796 . 836) (nil fontified nil 791 . 796) (nil fontified nil 786 . 791) (786 . 842)) nil (26789 15277 38757 421000) 0 nil])
([nil nil ((1508 . 1509) (t 26789 15277 38321 266000)) nil (26789 15299 349244 783000) 0 nil])
([nil nil ((1303 . 1304) (t 26789 15299 349949 372000)) nil (26789 15928 605986 613000) 0 nil])
([nil nil ((#("   . TODO: Write documentation" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 9 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 9 30 (c-in-sws t face font-lock-comment-face fontified t)) . 1304)) nil (26789 15928 605986 129000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1304)) nil (26789 15928 605985 722000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1334 . 1335) (nil fontified nil 1334 . 1335) (nil fontified nil 1313 . 1334) (nil fontified nil 1309 . 1313) (nil fontified nil 1304 . 1309) (1304 . 1335)) nil (26789 15928 605985 261000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1365 . 1366) (nil fontified nil 1365 . 1366) (nil fontified nil 1344 . 1365) (nil fontified nil 1340 . 1344) (nil fontified nil 1335 . 1340) (1335 . 1366)) nil (26789 15928 605984 514000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -1302) (undo-tree-id128 . -1) 1303) nil (26789 15928 605983 774000) 0 nil])
([nil nil ((#("documentation" 0 13 (face font-lock-comment-face fontified t)) . -1320) (undo-tree-id127 . -13) 1333) nil (26789 15928 605982 881000) 0 nil])
([nil nil ((#("Write " 0 6 (face font-lock-comment-face fontified t)) . -1314) (undo-tree-id126 . -6) 1320) nil (26789 15928 605982 120000) 0 nil])
([nil nil ((1314 . 1316)) nil (26789 15928 605981 425000) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-comment-face fontified t)) . -1314) (undo-tree-id124 . -1) (#("P" 0 1 (face font-lock-comment-face fontified t)) . -1315) (undo-tree-id125 . -1) 1316) nil (26789 15928 605980 754000) 0 nil])
([nil nil ((1314 . 1335)) nil (26789 15928 605979 377000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -1331) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1332) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1333) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1334) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 1335) nil (26789 15928 605977 550000) 0 nil])
([nil nil ((1331 . 1344)) nil (26789 15928 605957 388000) 0 nil])
([nil nil ((1344 . 1348) (t 26789 15928 605491 2000)) nil (26789 15940 272160 819000) 0 nil])
([nil nil ((1348 . 1369)) nil (26789 15940 272160 27000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -1367) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1368) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 1369) nil (26789 15940 272158 349000) 0 nil])
([nil nil ((1367 . 1371)) nil (26789 15940 272143 587000) 0 nil])
([nil nil ((924 . 928) (t 26789 15940 272774 671000)) nil (26789 16026 431076 591000) 0 nil])
([nil nil ((928 . 936)) nil (26789 16026 431076 207000) 0 nil])
([nil nil ((936 . 937)) nil (26789 16026 431075 965000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-comment-face fontified t)) . -935) (undo-tree-id145 . -1) (#(":" 0 1 (face font-lock-comment-face fontified t)) . -936) (undo-tree-id146 . -1) 937) nil (26789 16026 431075 486000) 0 nil])
([nil nil ((935 . 952)) nil (26789 16026 431074 368000) 0 nil])
([nil nil ((#("glob" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t)) . -948) (undo-tree-id144 . -4) 952) nil (26789 16026 431073 825000) 0 nil])
([nil nil ((948 . 969)) nil (26789 16026 431072 931000) 0 nil])
([nil nil ((969 . 975)) nil (26789 16026 431072 585000) 0 nil])
([nil nil ((975 . 980)) nil (26789 16026 431072 247000) 0 nil])
([nil nil ((980 . 981)) nil (26789 16026 431071 924000) 0 nil])
([nil nil ((981 . 982)) nil (26789 16026 431071 421000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -980) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -981) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 982) nil (26789 16026 431070 906000) 0 nil])
([nil nil ((980 . 981)) nil (26789 16026 431068 917000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -980) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 981) nil (26789 16026 431068 344000) 0 nil])
([nil nil ((980 . 981)) nil (26789 16026 431039 385000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -980) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 981) nil (26789 16026 431038 165000) 0 nil])
([nil nil ((980 . 982)) nil (26789 16026 431025 534000) 0 nil])
([nil nil ((#("   . BUG: implement save_stack_to_file in the interpreter and load_stack_from_file" 0 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face font-lock-comment-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face font-lock-comment-face fontified t c-in-sws t) 40 41 (face font-lock-comment-face fontified t c-in-sws t) 41 42 (face font-lock-comment-face fontified t c-in-sws t) 42 43 (face font-lock-comment-face fontified t c-in-sws t) 43 44 (face font-lock-comment-face fontified t c-in-sws t) 44 45 (face font-lock-comment-face fontified t c-in-sws t) 45 46 (face font-lock-comment-face fontified t c-in-sws t) 46 47 (face font-lock-comment-face fontified t c-in-sws t) 47 48 (face font-lock-comment-face fontified t c-in-sws t) 48 49 (face font-lock-comment-face fontified t c-in-sws t) 49 50 (face font-lock-comment-face fontified t c-in-sws t) 50 51 (face font-lock-comment-face fontified t c-in-sws t) 51 52 (face font-lock-comment-face fontified t c-in-sws t) 52 53 (face font-lock-comment-face fontified t c-in-sws t) 53 54 (face font-lock-comment-face fontified t c-in-sws t) 54 55 (face font-lock-comment-face fontified t c-in-sws t) 55 56 (face font-lock-comment-face fontified t c-in-sws t) 56 57 (face font-lock-comment-face fontified t c-in-sws t) 57 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t) 59 60 (face font-lock-comment-face fontified t c-in-sws t) 60 61 (face font-lock-comment-face fontified t c-in-sws t) 61 62 (face font-lock-comment-face fontified t c-in-sws t) 62 63 (face font-lock-comment-face fontified t c-in-sws t) 63 64 (face font-lock-comment-face fontified t c-in-sws t) 64 65 (face font-lock-comment-face fontified t c-in-sws t) 65 66 (face font-lock-comment-face fontified t c-in-sws t) 66 67 (face font-lock-comment-face fontified t c-in-sws t) 67 68 (face font-lock-comment-face fontified t c-in-sws t) 68 69 (face font-lock-comment-face fontified t c-in-sws t) 69 70 (face font-lock-comment-face fontified t c-in-sws t) 70 71 (face font-lock-comment-face fontified t c-in-sws t) 71 72 (face font-lock-comment-face fontified t c-in-sws t) 72 73 (face font-lock-comment-face fontified t c-in-sws t) 73 74 (face font-lock-comment-face fontified t c-in-sws t) 74 75 (face font-lock-comment-face fontified t c-in-sws t) 75 76 (face font-lock-comment-face fontified t c-in-sws t) 76 77 (face font-lock-comment-face fontified t c-in-sws t) 77 78 (face font-lock-comment-face fontified t c-in-sws t) 78 79 (face font-lock-comment-face fontified t c-in-sws t) 79 80 (face font-lock-comment-face fontified t c-in-sws t) 80 81 (face font-lock-comment-face fontified t c-in-sws t) 81 82 (face font-lock-comment-face fontified t c-in-sws t)) . 842) (undo-tree-id149 . -82) (t 26789 16026 431876 6000)) nil (26789 16036 414216 942000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 842) (undo-tree-id147 . -1) (undo-tree-id148 . -1)) nil (26789 16036 414215 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 982 . 983) (nil fontified nil 982 . 983) (nil fontified nil 981 . 982) (nil fontified nil 980 . 981) (nil fontified nil 979 . 980) (nil fontified nil 978 . 979) (nil fontified nil 977 . 978) (nil fontified nil 976 . 977) (nil fontified nil 975 . 976) (nil fontified nil 974 . 975) (nil fontified nil 973 . 974) (nil fontified nil 972 . 973) (nil fontified nil 971 . 972) (nil fontified nil 970 . 971) (nil fontified nil 969 . 970) (nil fontified nil 968 . 969) (nil fontified nil 967 . 968) (nil fontified nil 966 . 967) (nil fontified nil 965 . 966) (nil fontified nil 964 . 965) (nil fontified nil 963 . 964) (nil fontified nil 962 . 963) (nil fontified nil 961 . 962) (nil fontified nil 960 . 961) (nil fontified nil 959 . 960) (nil fontified nil 958 . 959) (nil fontified nil 957 . 958) (nil fontified nil 956 . 957) (nil fontified nil 955 . 956) (nil fontified nil 954 . 955) (nil fontified nil 953 . 954) (nil fontified nil 952 . 953) (nil fontified nil 951 . 952) (nil fontified nil 950 . 951) (nil fontified nil 949 . 950) (nil fontified nil 948 . 949) (nil fontified nil 947 . 948) (nil fontified nil 946 . 947) (nil fontified nil 945 . 946) (nil fontified nil 944 . 945) (nil fontified nil 943 . 944) (nil fontified nil 942 . 943) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 937 . 938) (nil fontified nil 936 . 937) (nil fontified nil 935 . 936) (nil fontified nil 934 . 935) (nil fontified nil 933 . 934) (nil fontified nil 932 . 933) (nil fontified nil 931 . 932) (nil fontified nil 930 . 931) (nil fontified nil 929 . 930) (nil fontified nil 928 . 929) (nil fontified nil 927 . 928) (nil fontified nil 926 . 927) (nil fontified nil 925 . 926) (nil fontified nil 924 . 925) (nil fontified nil 923 . 924) (nil fontified nil 922 . 923) (nil fontified nil 921 . 922) (nil fontified nil 920 . 921) (nil fontified nil 919 . 920) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 915 . 916) (nil fontified nil 914 . 915) (nil fontified nil 913 . 914) (nil fontified nil 912 . 913) (nil fontified nil 911 . 912) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 906 . 907) (nil fontified nil 905 . 906) (nil fontified nil 904 . 905) (nil fontified nil 903 . 904) (nil fontified nil 900 . 903) (900 . 983)) nil (26789 16036 414201 202000) 0 nil])
([nil nil ((#("L" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 852) (undo-tree-id150 . -1) (t 26789 16036 415129 866000)) nil (26789 16608 635896 316000) 0 nil])
([nil nil ((852 . 853)) nil (26789 16608 635881 862000) 0 nil])
([nil nil ((#("#include \"config_path.h\"" 0 1 (face font-lock-preprocessor-face fontified t c-in-sws t c-is-sws t) 1 8 (face font-lock-preprocessor-face fontified t c-in-sws t) 8 9 (fontified t c-in-sws t) 9 10 (face font-lock-string-face fontified t c-in-sws t) 10 11 (face font-lock-string-face fontified t c-in-sws t) 11 12 (face font-lock-string-face fontified t c-in-sws t) 12 13 (face font-lock-string-face fontified t c-in-sws t) 13 14 (face font-lock-string-face fontified t c-in-sws t) 14 15 (face font-lock-string-face fontified t c-in-sws t) 15 16 (face font-lock-string-face fontified t c-in-sws t) 16 17 (face font-lock-string-face fontified t c-in-sws t) 17 18 (face font-lock-string-face fontified t c-in-sws t) 18 19 (face font-lock-string-face fontified t c-in-sws t) 19 20 (face font-lock-string-face fontified t c-in-sws t) 20 21 (face font-lock-string-face fontified t c-in-sws t) 21 24 (face font-lock-string-face fontified t c-in-sws t)) . 2833) (undo-tree-id157 . -24) (undo-tree-id158 . -24) (t 26789 16608 636680 641000)) nil (26789 16629 45225 922000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t rear-nonsticky t)) . 2833) (undo-tree-id156 . -1)) nil (26789 16629 45224 403000) 0 nil])
([nil nil ((nil fontified nil 2857 . 2858) (nil fontified nil 2854 . 2857) (nil fontified nil 2853 . 2854) (nil fontified nil 2852 . 2853) (nil fontified nil 2851 . 2852) (nil fontified nil 2850 . 2851) (nil fontified nil 2849 . 2850) (nil fontified nil 2848 . 2849) (nil fontified nil 2847 . 2848) (nil fontified nil 2846 . 2847) (nil fontified nil 2845 . 2846) (nil fontified nil 2844 . 2845) (nil fontified nil 2843 . 2844) (nil fontified nil 2842 . 2843) (nil fontified nil 2841 . 2842) (nil fontified nil 2834 . 2841) (nil fontified nil 2833 . 2834) (2833 . 2858)) nil (26789 16629 45223 79000) 0 nil])
([nil nil ((nil fontified nil 2882 . 2883) (nil fontified nil 2879 . 2882) (nil fontified nil 2878 . 2879) (nil fontified nil 2877 . 2878) (nil fontified nil 2876 . 2877) (nil fontified nil 2875 . 2876) (nil fontified nil 2874 . 2875) (nil fontified nil 2873 . 2874) (nil fontified nil 2872 . 2873) (nil fontified nil 2871 . 2872) (nil fontified nil 2870 . 2871) (nil fontified nil 2869 . 2870) (nil fontified nil 2868 . 2869) (nil fontified nil 2867 . 2868) (nil fontified nil 2866 . 2867) (nil fontified nil 2859 . 2866) (nil fontified nil 2858 . 2859) (2858 . 2883)) nil (26789 16629 45220 750000) 0 nil])
([nil nil ((#("path" 0 1 (face font-lock-string-face fontified t c-in-sws t) 1 2 (face font-lock-string-face fontified t c-in-sws t) 2 3 (face font-lock-string-face fontified t c-in-sws t) 3 4 (face font-lock-string-face fontified t c-in-sws t)) . -2850) (undo-tree-id154 . -4) (undo-tree-id155 . -4) 2854) nil (26789 16629 45218 256000) 0 nil])
([nil nil ((#("config_" 0 1 (face font-lock-string-face fontified t c-in-sws t) 1 2 (face font-lock-string-face fontified t c-in-sws t) 2 3 (face font-lock-string-face fontified t c-in-sws t) 3 4 (face font-lock-string-face fontified t c-in-sws t) 4 5 (face font-lock-string-face fontified t c-in-sws t) 5 6 (face font-lock-string-face fontified t c-in-sws t) 6 7 (face font-lock-string-face c-in-sws t fontified t)) . -2843) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) 2850) nil (26789 16629 45216 46000) 0 nil])
([nil nil ((2843 . 2850)) nil (26789 16629 45203 43000) 0 nil])
([nil nil ((#("#define HISTORY_FILE \".rpn_history\"" 0 1 (face font-lock-preprocessor-face fontified t c-in-sws t c-is-sws t) 1 7 (face font-lock-preprocessor-face fontified t c-in-sws t) 7 8 (fontified t c-in-sws t) 8 20 (face font-lock-variable-name-face fontified t c-in-sws t) 20 21 (fontified t c-in-sws t) 21 35 (face font-lock-string-face fontified t c-in-sws t)) . 2293) (undo-tree-id162 . -35) (t 26789 16629 45199 599000)) nil (26789 16657 932912 49000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 2293)) nil (26789 16657 932910 797000) 0 nil])
([nil nil ((#("#define CONFIG_FILE \"../data/config.txt\"" 0 1 (face font-lock-preprocessor-face c-in-sws t c-is-sws t fontified t) 1 7 (face font-lock-preprocessor-face c-in-sws t fontified t) 7 8 (c-in-sws t fontified t) 8 19 (face font-lock-variable-name-face c-in-sws t fontified t) 19 20 (c-in-sws t fontified t) 20 40 (face font-lock-string-face c-in-sws t fontified t)) . 2293) (undo-tree-id161 . -40)) nil (26789 16657 932910 252000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 2293) (undo-tree-id159 . -1) (undo-tree-id160 . -1)) nil (26789 16657 932908 581000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 2293)) nil (26789 16657 932895 315000) 0 nil])
([nil nil ((2776 . 2778) (t 26789 16657 933934 197000)) nil (26789 17067 426499 480000) 0 nil])
([nil nil ((#("    char cfg[PATH_MAX];" 0 4 (fontified t) 4 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 12 (face font-lock-variable-name-face fontified t) 12 23 (fontified t)) . 3428) (undo-tree-id200 . -13) (t 26789 17067 426349 93000)) nil (26789 17105 321285 760000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428)) nil (26789 17105 321284 926000) 0 nil])
([nil nil ((#("    if (resolve_config_path(cfg) != 0) {" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 40 (fontified t)) . 3428) (undo-tree-id199 . -8)) nil (26789 17105 321284 475000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428)) nil (26789 17105 321283 657000) 0 nil])
([nil nil ((#("        fprintf(stderr, \"Could not determine config path\\n\");" 0 24 (fontified t) 24 59 (face font-lock-string-face fontified t) 59 61 (fontified t)) . 3428)) nil (26789 17105 321283 65000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428)) nil (26789 17105 321282 733000) 0 nil])
([nil nil ((#("        return 1;" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 17 (fontified t)) . 3428) (undo-tree-id198 . -17)) nil (26789 17105 321282 261000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id197 . -1)) nil (26789 17105 321281 466000) 0 nil])
([nil nil ((#("    }" 0 5 (fontified t)) . 3428) (undo-tree-id196 . -5)) nil (26789 17105 321280 795000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id195 . -1)) nil (26789 17105 321280 127000) 0 nil])
([nil nil ((#("    if (ensure_parent_dir(cfg) != 0) {" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 38 (fontified t)) . 3428) (undo-tree-id193 . -8) (undo-tree-id194 . -38)) nil (26789 17105 321279 342000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id192 . -1)) nil (26789 17105 321278 325000) 0 nil])
([nil nil ((#("        fprintf(stderr, \"Could not create config directory for %s\\n\", cfg);" 0 24 (fontified t) 24 68 (face font-lock-string-face fontified t) 68 75 (fontified t)) . 3428) (undo-tree-id191 . -75)) nil (26789 17105 321277 607000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id190 . -1)) nil (26789 17105 321276 842000) 0 nil])
([nil nil ((#("        return 1;" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 17 (fontified t)) . 3428) (undo-tree-id189 . -17)) nil (26789 17105 321276 25000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id188 . -1)) nil (26789 17105 321274 742000) 0 nil])
([nil nil ((#("    }" 0 5 (fontified t)) . 3428) (undo-tree-id187 . -5)) nil (26789 17105 321273 952000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id186 . -1)) nil (26789 17105 321273 196000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id185 . -1)) nil (26789 17105 321272 443000) 0 nil])
([nil nil ((#("    if (load_config(cfg) != 0) {" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 32 (fontified t)) . 3428) (undo-tree-id182 . -25) (undo-tree-id183 . -25) (undo-tree-id184 . -32)) nil (26789 17105 321271 532000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id181 . -1)) nil (26789 17105 321270 11000) 0 nil])
([nil nil ((#("        fprintf(stderr, \"Config not found at %s (create it to override defaults)\\n\", cfg);" 0 24 (fontified t) 24 44 (face font-lock-string-face fontified t) 44 83 (face font-lock-string-face fontified t) 83 90 (fontified t)) . 3428) (undo-tree-id180 . -90)) nil (26789 17105 321269 202000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id179 . -1)) nil (26789 17105 321268 291000) 0 nil])
([nil nil ((#("        // optionally: try a compiled-in default here" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 53 (face font-lock-comment-face fontified t c-in-sws t)) . 3428) (undo-tree-id178 . -53)) nil (26789 17105 321267 551000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id177 . -1)) nil (26789 17105 321266 782000) 0 nil])
([nil nil ((#("    }" 0 1 (fontified t c-in-sws t c-is-sws t) 1 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-is-sws t)) . 3428) (undo-tree-id176 . -5)) nil (26789 17105 321265 642000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id175 . -1)) nil (26789 17105 321264 571000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id174 . -1)) nil (26789 17105 321263 665000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3428) (undo-tree-id173 . -1)) nil (26789 17105 321262 331000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3427) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 3428) nil (26789 17105 321258 969000) 0 nil])
([nil nil ((#("//#include \"config_path.h\"" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 10 (c-in-sws t face font-lock-comment-face fontified t) 10 11 (c-in-sws t face font-lock-comment-face fontified t) 11 12 (c-in-sws t face font-lock-comment-face fontified t) 12 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t face font-lock-comment-face fontified t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t face font-lock-comment-face fontified t) 17 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face font-lock-comment-face fontified t) 19 20 (c-in-sws t face font-lock-comment-face fontified t) 20 21 (c-in-sws t face font-lock-comment-face fontified t) 21 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face font-lock-comment-face fontified t) 23 26 (c-in-sws t face font-lock-comment-face fontified t)) . 2776) (undo-tree-id202 . -26) (undo-tree-id203 . -2) (undo-tree-id204 . -26) (t 26789 17105 321321 687000)) nil (26789 17111 714134 32000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t rear-nonsticky t)) . 2776) (undo-tree-id201 . -1)) nil (26789 17111 714129 70000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3163) (t 26789 17111 714485 771000)) nil (26789 17273 845527 971000) 0 nil])
([nil nil ((#("txt\"" 0 4 (face font-lock-string-face fontified t)) . -4534) (undo-tree-id211 . -4) 4538 (t 26789 17273 845646 960000)) nil (26789 17302 264955 833000) 0 nil])
([nil nil ((#("config." 0 7 (face font-lock-string-face fontified t)) . -4527) (undo-tree-id210 . -7) 4534) nil (26789 17302 264954 787000) 0 nil])
([nil nil ((#("data/" 0 5 (face font-lock-string-face fontified t)) . -4522) (undo-tree-id209 . -5) 4527) nil (26789 17302 264953 636000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -4518) (undo-tree-id205 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -4519) (undo-tree-id206 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -4520) (undo-tree-id207 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -4521) (undo-tree-id208 . -1) 4522) nil (26789 17302 264951 642000) 0 nil])
([nil nil ((4518 . 4529)) nil (26789 58415 979071 127000) 0 nil])
([nil nil ((3426 . 3427) (t 26789 17302 265376 368000)) nil (26789 58420 104384 609000) 0 nil] [nil nil ((3426 . 3427) (t 26789 17302 265376 368000)) ((#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . 3426) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1)) (26789 58414 682978 190000) 0 nil])
([nil nil ((3427 . 3429)) nil (26789 58420 104383 753000) 0 nil])
([nil nil ((3427 . 3429)) ((#("//" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . 3427) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2)) (26789 58413 803679 327000) 0 nil])
([nil nil ((3429 . 3430)) nil (26789 58420 104382 942000) 0 nil])
([nil nil ((3429 . 3430)) ((#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 3429)) (26789 58413 803143 995000) 0 nil])
([nil nil ((nil fontified nil 3475 . 3476) (nil fontified nil 3460 . 3475) (nil fontified nil 3449 . 3460) (nil fontified nil 3438 . 3449) (nil fontified nil 3437 . 3438) (nil fontified nil 3431 . 3437) (nil fontified nil 3430 . 3431) (3430 . 3476)) nil (26789 58420 104378 999000) 0 nil])
nil
([nil nil ((#("FILE" 0 4 (fontified t)) . -3420) (undo-tree-id219 . -4) (undo-tree-id220 . -4) 3424 (t 26789 58420 104977 8000)) nil (26789 60890 365747 271000) 0 nil])
([nil nil ((3420 . 3424)) nil (26789 60890 365733 972000) 0 nil])
([nil nil ((#("   . FIXME: define the names of config files in globals.h" 0 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) c-in-sws t fontified t) 6 7 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) c-in-sws t fontified t) 7 8 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) c-in-sws t fontified t) 8 9 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) c-in-sws t fontified t) 9 10 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 11 (c-in-sws t face font-lock-comment-face fontified t) 11 12 (c-in-sws t face font-lock-comment-face fontified t) 12 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t face font-lock-comment-face fontified t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t face font-lock-comment-face fontified t) 17 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face font-lock-comment-face fontified t) 19 20 (c-in-sws t face font-lock-comment-face fontified t) 20 21 (c-in-sws t face font-lock-comment-face fontified t) 21 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face font-lock-comment-face fontified t) 24 25 (c-in-sws t face font-lock-comment-face fontified t) 25 26 (c-in-sws t face font-lock-comment-face fontified t) 26 27 (c-in-sws t face font-lock-comment-face fontified t) 27 28 (c-in-sws t face font-lock-comment-face fontified t) 28 29 (c-in-sws t face font-lock-comment-face fontified t) 29 30 (c-in-sws t face font-lock-comment-face fontified t) 30 31 (c-in-sws t face font-lock-comment-face fontified t) 31 32 (c-in-sws t face font-lock-comment-face fontified t) 32 33 (c-in-sws t face font-lock-comment-face fontified t) 33 34 (c-in-sws t face font-lock-comment-face fontified t) 34 35 (c-in-sws t face font-lock-comment-face fontified t) 35 36 (c-in-sws t face font-lock-comment-face fontified t) 36 37 (c-in-sws t face font-lock-comment-face fontified t) 37 38 (c-in-sws t face font-lock-comment-face fontified t) 38 39 (c-in-sws t face font-lock-comment-face fontified t) 39 40 (c-in-sws t face font-lock-comment-face fontified t) 40 41 (c-in-sws t face font-lock-comment-face fontified t) 41 42 (c-in-sws t face font-lock-comment-face fontified t) 42 43 (c-in-sws t face font-lock-comment-face fontified t) 43 44 (c-in-sws t face font-lock-comment-face fontified t) 44 45 (c-in-sws t face font-lock-comment-face fontified t) 45 46 (c-in-sws t face font-lock-comment-face fontified t) 46 47 (c-in-sws t face font-lock-comment-face fontified t) 47 48 (c-in-sws t face font-lock-comment-face fontified t) 48 49 (c-in-sws t face font-lock-comment-face fontified t) 49 50 (c-in-sws t face font-lock-comment-face fontified t) 50 51 (c-in-sws t face font-lock-comment-face fontified t) 51 52 (c-in-sws t face font-lock-comment-face fontified t) 52 53 (c-in-sws t face font-lock-comment-face fontified t) 53 54 (c-in-sws t face font-lock-comment-face fontified t) 54 55 (c-in-sws t face font-lock-comment-face fontified t) 55 56 (c-in-sws t face font-lock-comment-face fontified t) 56 57 (c-in-sws t face font-lock-comment-face fontified t)) . 842) (undo-tree-id227 . -57) (t 26789 60890 366742 674000)) nil (26789 61113 565993 446000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 842) (undo-tree-id225 . -1) (undo-tree-id226 . -1)) nil (26789 61113 565992 474000) 0 nil])
([nil nil ((#("BUG" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t)) . -847) (undo-tree-id223 . -3) (undo-tree-id224 . -3) 850) nil (26789 61113 565991 86000) 0 nil])
([nil nil ((847 . 851)) nil (26789 61113 565989 349000) 0 nil])
([nil nil ((863 . 871)) nil (26789 61113 565988 866000) 0 nil])
([nil nil ((#("   . BUG: fix buffer overruns in load_program" 0 45 (c-in-sws t face font-lock-comment-face fontified t)) . 934) (undo-tree-id222 . -45)) nil (26789 61113 565988 156000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 934) (undo-tree-id221 . -1)) nil (26789 61113 565985 918000) 0 nil])
([nil nil ((nil rear-nonsticky nil 887 . 888) (nil fontified nil 887 . 888) (nil fontified nil 842 . 887) (842 . 888)) nil (26789 61113 565974 86000) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-comment-face fontified t)) . 777) (#("1" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 777) (t 26789 61113 567148 326000)) nil (26789 61130 402825 282000) 0 nil])
([nil nil ((777 . 779)) nil (26789 61130 402821 545000) 0 nil])
([nil nil ((841 . 862) (t 26789 61130 403556 89000)) nil (26789 61379 707629 811000) 0 nil])
([nil nil ((862 . 870)) nil (26789 61379 707628 634000) 0 nil])
([nil nil ((862 . 870) (#("makefile" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 6 (face font-lock-comment-face fontified t) 6 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face fontified t)) . 862)) nil (26789 61379 707624 495000) 0 nil])
([nil nil ((#("   . FIXME: read configuration from .config/mm_rpn etc. and put that in the Makefile" 0 5 (face font-lock-comment-face c-in-sws t fontified t) 5 10 (face ((:foreground "#FF4500") hl-todo font-lock-comment-face) c-in-sws t fontified t) 10 50 (face font-lock-comment-face c-in-sws t fontified t) 50 51 (face font-lock-comment-face c-in-sws t fontified t) 51 52 (face font-lock-comment-face c-in-sws t fontified t) 52 53 (face font-lock-comment-face c-in-sws t fontified t) 53 54 (face font-lock-comment-face c-in-sws t fontified t) 54 55 (face font-lock-comment-face c-in-sws t fontified t) 55 56 (c-in-sws t face font-lock-comment-face fontified t) 56 57 (c-in-sws t face font-lock-comment-face fontified t) 57 58 (c-in-sws t face font-lock-comment-face fontified t) 58 59 (c-in-sws t face font-lock-comment-face fontified t) 59 60 (c-in-sws t face font-lock-comment-face fontified t) 60 61 (c-in-sws t face font-lock-comment-face fontified t) 61 62 (c-in-sws t face font-lock-comment-face fontified t) 62 63 (c-in-sws t face font-lock-comment-face fontified t) 63 64 (c-in-sws t face font-lock-comment-face fontified t) 64 65 (c-in-sws t face font-lock-comment-face fontified t) 65 66 (c-in-sws t face font-lock-comment-face fontified t) 66 67 (c-in-sws t face font-lock-comment-face fontified t) 67 68 (c-in-sws t face font-lock-comment-face fontified t) 68 69 (c-in-sws t face font-lock-comment-face fontified t) 69 70 (c-in-sws t face font-lock-comment-face fontified t) 70 71 (c-in-sws t face font-lock-comment-face fontified t) 71 72 (c-in-sws t face font-lock-comment-face fontified t) 72 73 (c-in-sws t face font-lock-comment-face fontified t) 73 74 (c-in-sws t face font-lock-comment-face fontified t) 74 75 (c-in-sws t face font-lock-comment-face fontified t) 75 76 (c-in-sws t face font-lock-comment-face fontified t) 76 77 (c-in-sws t face font-lock-comment-face fontified t) 77 78 (c-in-sws t face font-lock-comment-face fontified t) 78 79 (c-in-sws t face font-lock-comment-face fontified t) 79 80 (c-in-sws t face font-lock-comment-face fontified t) 80 81 (c-in-sws t face font-lock-comment-face fontified t) 81 82 (c-in-sws t face font-lock-comment-face fontified t) 82 83 (c-in-sws t face font-lock-comment-face fontified t) 83 84 (c-in-sws t face font-lock-comment-face fontified t)) . 786) (undo-tree-id231 . -84) (undo-tree-id232 . -84) (undo-tree-id233 . -84) (undo-tree-id234 . -84) (undo-tree-id235 . -84) (t 26789 61379 708593 962000)) nil (26790 3989 2194 973000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . 786) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1)) nil (26790 3989 2190 298000) 0 nil])
([nil nil ((#("   . BUG: fix buffer overruns in load_program" 0 45 (c-in-sws t face font-lock-comment-face fontified t)) . 786) (undo-tree-id237 . -45) (t 26790 3989 2486 444000)) nil (26790 6888 701876 326000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . 786) (undo-tree-id236 . -1)) nil (26790 6888 701872 613000) 0 nil])
([nil nil ((#("   . TODO: implement in JSON save_stack_to_file in the interpreter and load_stack_from_file" 0 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 6 7 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 7 8 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 8 9 (c-in-sws t face ((:foreground "#FFD700") hl-todo font-lock-comment-face) fontified t) 9 10 (c-in-sws t face font-lock-comment-face fontified t) 10 11 (c-in-sws t face font-lock-comment-face fontified t) 11 12 (c-in-sws t face font-lock-comment-face fontified t) 12 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t face font-lock-comment-face fontified t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t face font-lock-comment-face fontified t) 17 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face font-lock-comment-face fontified t) 19 20 (c-in-sws t face font-lock-comment-face fontified t) 20 21 (c-in-sws t face font-lock-comment-face fontified t) 21 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face font-lock-comment-face fontified t) 24 25 (c-in-sws t face font-lock-comment-face fontified t) 25 26 (c-in-sws t face font-lock-comment-face fontified t) 26 27 (c-in-sws t face font-lock-comment-face fontified t) 27 28 (c-in-sws t face font-lock-comment-face fontified t) 28 29 (c-in-sws t face font-lock-comment-face fontified t) 29 30 (c-in-sws t face font-lock-comment-face fontified t) 30 31 (c-in-sws t face font-lock-comment-face fontified t) 31 32 (c-in-sws t face font-lock-comment-face fontified t) 32 33 (c-in-sws t face font-lock-comment-face fontified t) 33 34 (c-in-sws t face font-lock-comment-face fontified t) 34 35 (c-in-sws t face font-lock-comment-face fontified t) 35 36 (c-in-sws t face font-lock-comment-face fontified t) 36 37 (c-in-sws t face font-lock-comment-face fontified t) 37 38 (c-in-sws t face font-lock-comment-face fontified t) 38 39 (c-in-sws t face font-lock-comment-face fontified t) 39 40 (c-in-sws t face font-lock-comment-face fontified t) 40 41 (c-in-sws t face font-lock-comment-face fontified t) 41 42 (c-in-sws t face font-lock-comment-face fontified t) 42 43 (c-in-sws t face font-lock-comment-face fontified t) 43 44 (c-in-sws t face font-lock-comment-face fontified t) 44 45 (c-in-sws t face font-lock-comment-face fontified t) 45 46 (c-in-sws t face font-lock-comment-face fontified t) 46 47 (c-in-sws t face font-lock-comment-face fontified t) 47 48 (c-in-sws t face font-lock-comment-face fontified t) 48 49 (c-in-sws t face font-lock-comment-face fontified t) 49 50 (c-in-sws t face font-lock-comment-face fontified t) 50 51 (c-in-sws t face font-lock-comment-face fontified t) 51 52 (c-in-sws t face font-lock-comment-face fontified t) 52 53 (c-in-sws t face font-lock-comment-face fontified t) 53 54 (c-in-sws t face font-lock-comment-face fontified t) 54 55 (c-in-sws t face font-lock-comment-face fontified t) 55 56 (c-in-sws t face font-lock-comment-face fontified t) 56 57 (c-in-sws t face font-lock-comment-face fontified t) 57 58 (c-in-sws t face font-lock-comment-face fontified t) 58 59 (c-in-sws t face font-lock-comment-face fontified t) 59 60 (c-in-sws t face font-lock-comment-face fontified t) 60 61 (c-in-sws t face font-lock-comment-face fontified t) 61 62 (c-in-sws t face font-lock-comment-face fontified t) 62 63 (c-in-sws t face font-lock-comment-face fontified t) 63 64 (c-in-sws t face font-lock-comment-face fontified t) 64 65 (c-in-sws t face font-lock-comment-face fontified t) 65 66 (c-in-sws t face font-lock-comment-face fontified t) 66 67 (c-in-sws t face font-lock-comment-face fontified t) 67 68 (c-in-sws t face font-lock-comment-face fontified t) 68 69 (c-in-sws t face font-lock-comment-face fontified t) 69 70 (c-in-sws t face font-lock-comment-face fontified t) 70 71 (c-in-sws t face font-lock-comment-face fontified t) 71 72 (c-in-sws t face font-lock-comment-face fontified t) 72 73 (c-in-sws t face font-lock-comment-face fontified t) 73 74 (c-in-sws t face font-lock-comment-face fontified t) 74 75 (c-in-sws t face font-lock-comment-face fontified t) 75 76 (c-in-sws t face font-lock-comment-face fontified t) 76 77 (c-in-sws t face font-lock-comment-face fontified t) 77 78 (c-in-sws t face font-lock-comment-face fontified t) 78 79 (c-in-sws t face font-lock-comment-face fontified t) 79 80 (c-in-sws t face font-lock-comment-face fontified t) 80 81 (c-in-sws t face font-lock-comment-face fontified t) 81 82 (c-in-sws t face font-lock-comment-face fontified t) 82 83 (c-in-sws t face font-lock-comment-face fontified t) 83 84 (c-in-sws t face font-lock-comment-face fontified t) 84 85 (c-in-sws t face font-lock-comment-face fontified t) 85 86 (c-in-sws t face font-lock-comment-face fontified t) 86 87 (c-in-sws t face font-lock-comment-face fontified t) 87 88 (c-in-sws t face font-lock-comment-face fontified t) 88 89 (c-in-sws t face font-lock-comment-face fontified t) 89 90 (c-in-sws t face font-lock-comment-face fontified t) 90 91 (c-in-sws t face font-lock-comment-face fontified t)) . 786) (undo-tree-id240 . -91) (t 26790 6888 703083 988000)) nil (26790 6898 798648 903000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . 786) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (26790 6898 798647 209000) 0 nil])
([nil nil ((nil fontified nil 1209 . 1210) (nil fontified nil 1208 . 1209) (nil fontified nil 1207 . 1208) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1204 . 1205) (nil fontified nil 1203 . 1204) (nil fontified nil 1202 . 1203) (nil fontified nil 1201 . 1202) (nil fontified nil 1200 . 1201) (nil fontified nil 1199 . 1200) (nil fontified nil 1198 . 1199) (nil fontified nil 1197 . 1198) (nil fontified nil 1196 . 1197) (nil fontified nil 1195 . 1196) (nil fontified nil 1194 . 1195) (nil fontified nil 1193 . 1194) (nil fontified nil 1192 . 1193) (nil fontified nil 1191 . 1192) (nil fontified nil 1190 . 1191) (nil fontified nil 1189 . 1190) (nil fontified nil 1188 . 1189) (nil fontified nil 1187 . 1188) (nil fontified nil 1186 . 1187) (nil fontified nil 1185 . 1186) (nil fontified nil 1184 . 1185) (nil fontified nil 1183 . 1184) (nil fontified nil 1182 . 1183) (nil fontified nil 1181 . 1182) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1178 . 1179) (nil fontified nil 1177 . 1178) (nil fontified nil 1176 . 1177) (nil fontified nil 1175 . 1176) (nil fontified nil 1174 . 1175) (nil fontified nil 1173 . 1174) (nil fontified nil 1172 . 1173) (nil fontified nil 1171 . 1172) (nil fontified nil 1170 . 1171) (nil fontified nil 1169 . 1170) (nil fontified nil 1168 . 1169) (nil fontified nil 1167 . 1168) (nil fontified nil 1166 . 1167) (nil fontified nil 1165 . 1166) (nil fontified nil 1164 . 1165) (nil fontified nil 1163 . 1164) (nil fontified nil 1162 . 1163) (nil fontified nil 1161 . 1162) (nil fontified nil 1160 . 1161) (nil fontified nil 1159 . 1160) (nil fontified nil 1158 . 1159) (nil fontified nil 1157 . 1158) (nil fontified nil 1156 . 1157) (nil fontified nil 1155 . 1156) (nil fontified nil 1154 . 1155) (nil fontified nil 1153 . 1154) (nil fontified nil 1152 . 1153) (nil fontified nil 1151 . 1152) (nil fontified nil 1150 . 1151) (nil fontified nil 1149 . 1150) (nil fontified nil 1148 . 1149) (nil fontified nil 1147 . 1148) (nil fontified nil 1146 . 1147) (nil fontified nil 1145 . 1146) (nil fontified nil 1144 . 1145) (nil fontified nil 1143 . 1144) (nil fontified nil 1142 . 1143) (nil fontified nil 1141 . 1142) (nil fontified nil 1140 . 1141) (nil fontified nil 1139 . 1140) (nil fontified nil 1138 . 1139) (nil fontified nil 1137 . 1138) (nil fontified nil 1136 . 1137) (nil fontified nil 1135 . 1136) (nil fontified nil 1134 . 1135) (nil fontified nil 1133 . 1134) (nil fontified nil 1132 . 1133) (nil fontified nil 1131 . 1132) (nil fontified nil 1130 . 1131) (nil fontified nil 1129 . 1130) (nil fontified nil 1128 . 1129) (nil fontified nil 1127 . 1128) (nil fontified nil 1126 . 1127) (nil fontified nil 1125 . 1126) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1122 . 1123) (nil fontified nil 1121 . 1122) (nil fontified nil 1118 . 1121) (1118 . 1210)) nil (26790 6898 798633 782000) 0 nil])
([nil nil ((786 . 787) (t 26790 6898 799331 941000)) nil (26790 7106 227309 960000) 0 nil])
([nil nil ((786 . 787)) nil (26790 7106 227309 484000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -786) (undo-tree-id245 . -1) 787) nil (26790 7106 227308 810000) 0 nil])
([nil nil ((786 . 789)) nil (26790 7106 227307 848000) 0 nil])
([nil nil ((789 . 792)) nil (26790 7106 227307 553000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-comment-face fontified t)) . -791) (undo-tree-id244 . -1) 792) nil (26790 7106 227306 867000) 0 nil])
([nil nil ((791 . 795)) nil (26790 7106 227305 629000) 0 nil])
([nil nil ((795 . 796)) nil (26790 7106 227305 105000) 0 nil])
([nil nil ((796 . 806)) nil (26790 7106 227304 391000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -803) (undo-tree-id241 . -1) (#("f" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -804) (undo-tree-id242 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -805) (undo-tree-id243 . -1) 806) nil (26790 7106 227303 89000) 0 nil])
([nil nil ((803 . 824)) nil (26790 7106 227293 207000) 0 nil])
([nil nil ((824 . 837)) nil (26790 7106 227288 893000) 0 nil])
([nil nil ((#("   . TODO: check if registers are read in and saved" 0 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face ((:foreground "#FFD700") hl-todo font-lock-comment-face) c-in-sws t fontified t) 6 7 (face ((:foreground "#FFD700") hl-todo font-lock-comment-face) c-in-sws t fontified t) 7 8 (face ((:foreground "#FFD700") hl-todo font-lock-comment-face) c-in-sws t fontified t) 8 9 (face ((:foreground "#FFD700") hl-todo font-lock-comment-face) c-in-sws t fontified t) 9 10 (face font-lock-comment-face c-in-sws t fontified t) 10 11 (face font-lock-comment-face c-in-sws t fontified t) 11 12 (face font-lock-comment-face c-in-sws t fontified t) 12 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (face font-lock-comment-face c-in-sws t fontified t) 14 15 (face font-lock-comment-face c-in-sws t fontified t) 15 16 (face font-lock-comment-face c-in-sws t fontified t) 16 17 (face font-lock-comment-face c-in-sws t fontified t) 17 18 (face font-lock-comment-face c-in-sws t fontified t) 18 19 (face font-lock-comment-face c-in-sws t fontified t) 19 20 (face font-lock-comment-face c-in-sws t fontified t) 20 21 (face font-lock-comment-face c-in-sws t fontified t) 21 22 (face font-lock-comment-face c-in-sws t fontified t) 22 23 (face font-lock-comment-face c-in-sws t fontified t) 23 24 (face font-lock-comment-face c-in-sws t fontified t) 24 25 (face font-lock-comment-face c-in-sws t fontified t) 25 26 (face font-lock-comment-face c-in-sws t fontified t) 26 27 (face font-lock-comment-face c-in-sws t fontified t) 27 28 (face font-lock-comment-face c-in-sws t fontified t) 28 29 (face font-lock-comment-face c-in-sws t fontified t) 29 30 (face font-lock-comment-face c-in-sws t fontified t) 30 31 (face font-lock-comment-face c-in-sws t fontified t) 31 32 (face font-lock-comment-face c-in-sws t fontified t) 32 33 (face font-lock-comment-face c-in-sws t fontified t) 33 34 (face font-lock-comment-face c-in-sws t fontified t) 34 35 (face font-lock-comment-face c-in-sws t fontified t) 35 36 (face font-lock-comment-face c-in-sws t fontified t) 36 37 (face font-lock-comment-face c-in-sws t fontified t) 37 38 (face font-lock-comment-face c-in-sws t fontified t) 38 39 (face font-lock-comment-face c-in-sws t fontified t) 39 40 (face font-lock-comment-face c-in-sws t fontified t) 40 41 (face font-lock-comment-face c-in-sws t fontified t) 41 42 (c-in-sws t face font-lock-comment-face fontified t) 42 43 (c-in-sws t face font-lock-comment-face fontified t) 43 44 (c-in-sws t face font-lock-comment-face fontified t) 44 45 (c-in-sws t face font-lock-comment-face fontified t) 45 46 (c-in-sws t face font-lock-comment-face fontified t) 46 47 (c-in-sws t face font-lock-comment-face fontified t) 47 48 (c-in-sws t face font-lock-comment-face fontified t) 48 49 (c-in-sws t face font-lock-comment-face fontified t) 49 50 (c-in-sws t face font-lock-comment-face fontified t) 50 51 (c-in-sws t face font-lock-comment-face fontified t)) . 786) (undo-tree-id247 . -51) (t 26790 7106 227426 144000)) nil (26790 7301 357215 776000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 786) (undo-tree-id246 . -1)) nil (26790 7301 357211 594000) 0 nil])
([nil nil ((#("   . FIXME: print strings without quotes" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 10 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 40 (c-in-sws t face font-lock-comment-face fontified t)) . 1077) (t 26790 7301 357218 317000)) nil (26790 7414 785160 501000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1077) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1)) nil (26790 7414 785159 227000) 0 nil])
([nil nil ((nil rear-nonsticky nil 826 . 827) (nil fontified nil 826 . 827) (nil fontified nil 796 . 826) (nil fontified nil 791 . 796) (nil fontified nil 786 . 791) (786 . 827)) nil (26790 7414 785146 94000) 0 nil])
([nil nil ((#("   . FIXME: print strings without quotes" 0 5 (c-in-sws t face font-lock-comment-face fontified t) 5 10 (c-in-sws t face ((:foreground "#FF4500") hl-todo font-lock-comment-face) fontified t) 10 40 (c-in-sws t face font-lock-comment-face fontified t)) . 786) (undo-tree-id254 . -40) (t 26790 7414 786003 571000)) nil (26790 7495 849712 749000) 0 nil])
([nil current ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . 786) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1)) nil (26790 7495 849709 232000) 0 nil])
nil
